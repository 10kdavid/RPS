"use strict";(()=>{var t={};t.id=132,t.ids=[132],t.modules={145:t=>{t.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6249:(t,e)=>{Object.defineProperty(e,"l",{enumerable:!0,get:function(){return function t(e,r){return r in e?e[r]:"then"in e&&"function"==typeof e.then?e.then(e=>t(e,r)):"function"==typeof e&&"default"===r?e:void 0}}})},6998:(t,e,r)=>{r.r(e),r.d(e,{config:()=>c,default:()=>d,routeModule:()=>f});var s={};r.r(s),r.d(s,{default:()=>l});var n=r(1802),o=r(7153),a=r(6249);let i="sk_production_5YcBgonNBeEhyGBnWLbzgQU1hbJsxtr1GGuX8wSE1M6CgS2q5NuFJc25b5Pn3VXjn9WEj6HwKb65NKJgKV3NuvwQgLx84wpRt5dESVTh24svfFnyzHSNyx9eg1TZpLAHiyAFizeHNTTretuhbkg8AewfS4Qx5QrgoBoRjdsN1qvq3HDvRoNNv66yoKaTQafUoeGievHp8bMPLT1arB2EWsZf",u="https://www.crossmint.com/api";async function l(t,e){let{address:r}=t.query;if(!r||"string"!=typeof r)return e.status(400).json({error:"Wallet address is required"});console.log(`Processing ${t.method} request for transactions. Wallet: ${r}`);try{if("POST"===t.method){let{toAddress:s,amount:n,token:o="sol",chain:a="solana-mainnet"}=t.body;if(!s||!n)return e.status(400).json({error:"toAddress and amount are required fields"});let l=await fetch(`${u}/v1-alpha2/wallets/${r}/transactions`,{method:"POST",headers:{"X-API-KEY":i,"Content-Type":"application/json"},body:JSON.stringify({type:"transfer",toAddress:s,token:o,amount:n.toString(),chain:a})});if(!l.ok){let t="";try{let e=await l.json();t=JSON.stringify(e)}catch(e){t=await l.text()}return console.error(`Crossmint API Error: ${l.status} - ${t}`),e.status(l.status).json({error:`Failed to create transaction: ${l.statusText}`,details:t})}let d=await l.json();return e.status(200).json(d)}if("GET"!==t.method)return e.status(405).json({error:"Method not allowed"});{let t=await fetch(`${u}/v1-alpha2/wallets/${r}/transactions`,{method:"GET",headers:{"X-API-KEY":i,"Content-Type":"application/json"}});if(!t.ok){let r="";try{let e=await t.json();r=JSON.stringify(e)}catch(e){r=await t.text()}return console.error(`Crossmint API Error: ${t.status} - ${r}`),e.status(t.status).json({error:`Failed to get transaction history: ${t.statusText}`,details:r})}let s=await t.json();return e.status(200).json(s)}}catch(t){return console.error("Proxy API Error:",t),e.status(500).json({error:"Internal server error",message:t instanceof Error?t.message:"Unknown error"})}}let d=(0,a.l)(s,"default"),c=(0,a.l)(s,"config"),f=new n.PagesAPIRouteModule({definition:{kind:o.x.PAGES_API,page:"/api/crossmint/transactions/[address]",pathname:"/api/crossmint/transactions/[address]",bundlePath:"",filename:""},userland:s})},7153:(t,e)=>{var r;Object.defineProperty(e,"x",{enumerable:!0,get:function(){return r}}),function(t){t.PAGES="PAGES",t.PAGES_API="PAGES_API",t.APP_PAGE="APP_PAGE",t.APP_ROUTE="APP_ROUTE"}(r||(r={}))},1802:(t,e,r)=>{t.exports=r(145)}};var e=require("../../../../webpack-api-runtime.js");e.C(t);var r=e(e.s=6998);module.exports=r})();